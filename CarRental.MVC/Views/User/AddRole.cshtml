@using App.Areas.Identity.Models.UserViewModels
@model AddUserRoleModel
@{
    ViewData["Title"] = "Add Role";
}

<h4 class="text-center text-secondary">Assign Role to User: <span class="fw-bold text-primary">@Model.user.UserName</span></h4>
<partial name="_StatusMessage" />

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card shadow-lg border-0 rounded-lg">
            <div class="card-header bg-primary text-white text-center">
                <h3 class="mb-0">Manage User Roles</h3>
            </div>
            <div class="card-body">
                <form id="set-password-form" method="post">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                    <div class="mb-4">
                        <label asp-for="RoleNames" class="form-label fw-bold">Select Roles</label>
                        @Html.ListBoxFor(m => m.RoleNames, (IEnumerable<SelectListItem>)ViewBag.allRoles, new
                            {
                                id = "id-select-roles",
                                @class = "form-select w-100 border-primary"
                            })
                        <span asp-validation-for="RoleNames" class="text-danger"></span>
                    </div>

                    <div class="d-grid gap-2 d-md-flex justify-content-md-between">
                        <button type="submit" class="btn btn-success btn-lg">
                             Save Changes
                        </button>
                        <a class="btn btn-outline-secondary btn-lg" asp-action="Index">
                             Back to Members
                        </a>
                    </div>
                </form>

                <hr class="mt-4">
                <h5 class="text-muted text-uppercase"><i class="fas fa-user-shield"></i> Role-Based Claims</h5>
                @if (Model.claimsInRole.Count > 0)
                {
                    <ul class="list-group shadow-sm mb-3">
                        @foreach (var claim in Model.claimsInRole)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span><strong>@claim.ClaimType</strong>: @claim.ClaimValue</span>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-muted">No claims assigned through roles.</p>
                }

                <hr>
                <h5 class="text-muted text-uppercase"> Individual Claims</h5>
                <div class="d-flex justify-content-between">
                    <p class="mb-1">Manage user-specific claims.</p>
                    <a class="btn btn-outline-success btn-sm" asp-action="AddClaim" asp-route-userid="@Model.user.Id">
                         Add Claim
                    </a>
                </div>

                @if (Model.claimsInUserClaim.Count > 0)
                {
                    <ul class="list-group shadow-sm">
                        @foreach (var claim in Model.claimsInUserClaim)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <a asp-action="EditClaim" asp-route-claimid="@claim.Id" class="text-decoration-none">
                                    <strong>@claim.ClaimType</strong>: @claim.ClaimValue
                                </a>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-muted">No individual claims assigned.</p>
                }
            </div>
        </div>
    </div>
</div>




@section Scripts {

    <script src="~/lib/multiple-select/multiple-select.min.js"></script>
    <link rel="stylesheet" href="~/lib/multiple-select/multiple-select.min.css" />

    <script>
        $("#id-select-roles").multipleSelect({
            selectAll: false,
            keepOpen: false,
            isOpen: false,
        });
    </script>

    <partial name="_ValidationScriptsPartial" />
}
