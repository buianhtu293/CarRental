@model BookingListViewModel
@using CarRental.Domain.Enums
@using CarRental.MVC.Models.Booking

@{
    ViewData["Title"] = "My Bookings";
    Layout = "_Layout";
}


<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="fas fa-calendar-check mr-2"></i>My Bookings</h2>
    </div>

    <!-- Filters and Search -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" action="@Url.Action("Index")" class="row g-3">
                <div class="col-md-3">
                    <label class="form-label">Search</label>
                    <input type="text" name="searchTerm" value="@Model.SearchTerm"
                           class="form-control" placeholder="Search by booking number, car, etc...">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Status</label>
                    <select name="statusFilter" class="form-select">
                        @foreach (var option in Model.StatusOptions)
                        {
                            <option value="@option.Value"
                                    selected="@(Model.StatusFilter?.ToString() == option.Value || (string.IsNullOrEmpty(option.Value) && !Model.StatusFilter.HasValue))">
                                @option.Text
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Sort By</label>
                    <select name="sortBy" class="form-select">
                        @foreach (var option in Model.SortOptions)
                        {
                            <option value="@option.Value" selected="@(Model.SortBy == option.Value)">
                                @option.Text
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-outline-primary me-2">
                        <i class="fas fa-search"></i> Search
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                        <i class="fas fa-times"></i> Clear
                    </a>
                </div>
            </form>
        </div>
    </div>

    <!-- Results Summary -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <p class="text-muted mb-0">
            Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount)
            of @Model.TotalCount bookings
        </p>
    </div>

    <!-- Booking List -->
    @if (Model.Bookings.Any())
    {
        <div class="row">
            @foreach (var booking in Model.Bookings)
            {
                <div class="col-12 mb-4">
                    <div class="card shadow-sm">
                        <div class="card-header bg-white">
                            <div class="row align-items-center">
                                <div class="col-md-8">
                                    <h5 class="mb-1">
                                        <i class="fas fa-file-alt mr-2"></i>
                                        Booking #@booking.BookingNumber
                                    </h5>
                                    <small class="text-muted">
                                        <i class="fas fa-calendar mr-1"></i>
                                        Booked on @booking.BookingDate.ToString("dd/MM/yyyy HH:mm")
                                    </small>
                                </div>
                                <div class="col-md-4 text-md-end">
                                    <span class="badge @booking.OverallStatusClass p-2">
                                        @booking.OverallStatus
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <!-- Booking Summary -->
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <div class="row">
                                        <div class="col-6">
                                            <strong>From:</strong><br>
                                            <i class="fas fa-calendar-alt text-success mr-1"></i>
                                            @booking.PickupDate.ToString("dd/MM/yyyy")
                                        </div>
                                        <div class="col-6">
                                            <strong>To:</strong><br>
                                            <i class="fas fa-calendar-alt text-danger mr-1"></i>
                                            @booking.ReturnDate.ToString("dd/MM/yyyy")
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row">
                                        <div class="col-6">
                                            <strong>Duration:</strong><br>
                                            @booking.NumberOfDays day(s)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Cars in this booking -->
                            @foreach (var item in booking.BookingItems)
                            {
                                <div class="border rounded p-3 mb-3 booking-item" data-booking-item-id="@item.Id">
                                    <div class="row align-items-center">
                                        <!-- Car Image Carousel -->
                                        <div class="col-md-3">
                                            @if (item.CarImages.Any())
                                            {
                                                <div id="carousel-@item.Id" class="carousel slide car-image-carousel"
                                                     data-bs-ride="carousel">
                                                    <div class="carousel-inner">
                                                        @for (int i = 0; i < item.CarImages.Count; i++)
                                                        {
                                                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                                                <img src="@item.CarImages[i]"
                                                                     class="d-block w-100 rounded"
                                                                     alt="@item.CarName"
                                                                     style="height: 150px; object-fit: cover;">
                                                            </div>
                                                        }
                                                    </div>
                                                    @if (item.CarImages.Count > 1)
                                                    {
                                                        <button class="carousel-control-prev" type="button"
                                                                data-bs-target="#carousel-@item.Id"
                                                                data-bs-slide="prev">
                                                            <span class="carousel-control-prev-icon"
                                                                  aria-hidden="true"></span>
                                                            <span class="visually-hidden">Previous</span>
                                                        </button>
                                                        <button class="carousel-control-next" type="button"
                                                                data-bs-target="#carousel-@item.Id"
                                                                data-bs-slide="next">
                                                            <span class="carousel-control-next-icon"
                                                                  aria-hidden="true"></span>
                                                            <span class="visually-hidden">Next</span>
                                                        </button>
                                                    }
                                                </div>
                                            }
                                            else
                                            {
                                                <img src="@item.PrimaryImage" class="img-fluid rounded"
                                                     alt="@item.CarName"
                                                     style="height: 150px; width: 100%; object-fit: cover;">
                                            }
                                        </div>

                                        <!-- Car Details -->
                                        <div class="col-md-6">
                                            <h6 class="mb-2">@item.CarName</h6>
                                            <p class="text-muted mb-1">
                                                <i class="fas fa-id-card mr-1"></i>
                                                License Plate: @item.LicensePlate
                                            </p>
                                            <div class="row">
                                                <div class="col-6">
                                                    <small class="text-muted">Base Price:</small><br>
                                                    <strong>@item.PricePerDay.ToString("N0") VND/day</strong>
                                                </div>
                                                <div class="col-6">
                                                    <small class="text-muted">Deposit:</small><br>
                                                    <strong class="text-info">@item.Deposit.ToString("N0") VND</strong>
                                                </div>
                                            </div>
                                            <div class="mt-2">
                                                <small class="text-muted">Subtotal:</small><br>
                                                <strong class="text-primary">@item.SubTotal.ToString("N0") VND</strong>
                                            </div>
                                        </div>

                                        <!-- Status and Actions -->
                                        <div class="col-md-3 text-end">
                                            <div class="mb-3">
                                                <span class="badge @item.StatusClass p-2">
                                                    @item.StatusDisplay
                                                </span>
                                            </div>
                                            <div class="btn-group-vertical w-100">
                                                @foreach (var action in item.AvailableActions)
                                                {
                                                    @if (action.Action == "ViewDetails")
                                                    {
                                                        <a href="@Url.Action("Details", new { bookingItemId = item.Id })"
                                                           class="btn @action.ButtonClass btn-sm mb-1">
                                                            <i class="@action.Icon mr-1"></i>@action.DisplayText
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <button type="button"
                                                                class="btn @action.ButtonClass btn-sm mb-1 action-btn"
                                                                data-action="@action.Action"
                                                                data-booking-item-id="@item.Id"
                                                                data-requires-confirmation="@action.RequiresConfirmation.ToString().ToLower()"
                                                                data-confirmation-message="@action.ConfirmationMessage">
                                                            <i class="@action.Icon mr-1"></i>@action.DisplayText
                                                        </button>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Booking pagination">
                <ul class="pagination justify-content-center">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new
                                                       {
                                                           page = Model.CurrentPage - 1,
                                                           sortBy = Model.SortBy,
                                                           statusFilter = Model.StatusFilter,
                                                           searchTerm = Model.SearchTerm
                                                       })">
                                <i class="fas fa-chevron-left"></i> Previous
                            </a>
                        </li>
                    }

                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new
                                                       {
                                                           page = i,
                                                           sortBy = Model.SortBy,
                                                           statusFilter = Model.StatusFilter,
                                                           searchTerm = Model.SearchTerm
                                                       })">@i</a>
                        </li>
                    }

                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new
                                                       {
                                                           page = Model.CurrentPage + 1,
                                                           sortBy = Model.SortBy,
                                                           statusFilter = Model.StatusFilter,
                                                           searchTerm = Model.SearchTerm
                                                       })">
                                Next <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-calendar-times fa-5x text-muted mb-3"></i>
            <h4 class="text-muted">No Bookings Found</h4>
            <p class="text-muted">You haven't made any bookings yet or no bookings match your search criteria.</p>
        </div>
    }
</div>

@section Styles {
    <style>
        .car-image-carousel {
            height: 150px;
        }

        .booking-item {
            transition: all 0.3s ease;
        }

        .booking-item:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .badge-warning {
            background-color: #ffc107;
            color: #212529;
        }

        .badge-success {
            background-color: #28a745;
        }

        .badge-info {
            background-color: #17a2b8;
        }

        .badge-danger {
            background-color: #dc3545;
        }

        .badge-secondary {
            background-color: #6c757d;
        }

        .carousel-control-prev,
        .carousel-control-next {
            width: 30px;
        }

        .carousel-control-prev-icon,
        .carousel-control-next-icon {
            background-size: 15px;
        }

        .action-btn:disabled {
            opacity: 0.6;
        }
    </style>
}

@section Scripts {
    <script>
        let selectedBookingItemId = null;

        function getRequestVerificationToken() {
            return $('input[name="__RequestVerificationToken"]').val();
        }

        // Open modal depending on action
        $(document).on("click", ".action-btn", function () {
            var $btn = $(this);
            var action = $btn.data("action");
            selectedBookingItemId = $btn.data("booking-item-id");

            if (action === "ConfirmDeposit") {
                const modal = new bootstrap.Modal(document.getElementById('confirmDepositModal'));
                modal.show();
            } else if (action === "ConfirmPayment") {
                const modal = new bootstrap.Modal(document.getElementById('confirmPaymentModal'));
                modal.show();
            }
        });

        // Confirm deposit on Yes
        $("#confirmDepositYesBtn").on("click", function () {
            callConfirmAction('@Url.Action("ConfirmDeposit", "CarOwnerBooking")', this);
        });

        // Confirm payment on Yes
        $("#confirmPaymentYesBtn").on("click", function () {
            callConfirmAction('@Url.Action("ConfirmPayment", "CarOwnerBooking")', this);
        });

        // Generic AJAX handler
        function callConfirmAction(url, buttonEl) {
            if (!selectedBookingItemId) return;
            var $btn = $(buttonEl);
            $btn.prop("disabled", true);

            $.ajax({
                url: url,
                method: 'POST',
                data: {bookingItemId: selectedBookingItemId},
                headers: {'RequestVerificationToken': getRequestVerificationToken()}
            })
                .done(function (res) {
                    if (res && res.success) {
                        toastr.success(res.message);
                        location.reload();
                    } else {
                        toastr.error(res && res.message ? res.message : "Action failed.");
                    }
                })
                .fail(function (xhr) {
                    var msg = "Unexpected error.";
                    if (xhr && xhr.responseJSON && xhr.responseJSON.message) msg = xhr.responseJSON.message;
                    toastr.error(msg);
                })
                .always(function () {
                    $btn.prop("disabled", false);
                    const modalEl = $btn.closest('.modal')[0];
                    const modal = bootstrap.Modal.getInstance(modalEl);
                    modal.hide();
                });
        }
        
        @if (TempData["ErrorMessage"] != null)
        {
            <text>toastr.error("@TempData["ErrorMessage"]");</text>
        }
    </script>
}

@* Include Confirm Deposit Modal partial *@
@{
    var depositModalTask = Html.PartialAsync("_ConfirmDepositModal");
    var paymentModalTask = Html.PartialAsync("_ConfirmPaymentModal");

    await Task.WhenAll(depositModalTask, paymentModalTask);
}

@await depositModalTask
@await paymentModalTask

<!-- Add anti-forgery token for AJAX requests -->
@Html.AntiForgeryToken()